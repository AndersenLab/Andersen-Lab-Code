from Bio import SeqIO
import Bio.Restriction.Restriction as rest
from Bio.Seq import Seq
from Bio.Alphabet import IUPAC
import os

# lines = [line.strip() for line in open("out.txt", "r")]
# lines = lines[0:-1]
# output = {}
# for line in lines:
# 	newLine = line.split("=")
# 	key = newLine[0]
# 	value = newLine[1]
# 	output[key] = value

# originalSeq = output["SEQUENCE_TEMPLATE"]
# primerLeft = output["PRIMER_LEFT_0"]
# primerLeft = primerLeft.split(",")
# start = int(primerLeft[0])

# primerRight = output["PRIMER_RIGHT_0"]
# primerRight = primerRight.split(",")
# stop = int(primerRight[0] + primerRight[1])

# seq = Seq("TATCTCTTTCAAAAAAAAAAAGATGATGACGAAAGAAAAGGTGTCACCGTCTGCGTAATCTGACGTTCATTGGATTATAATAATAATCTGATAAAAACACAACTCGAAAGTGTTTATTTTTGATAAAGTTTATCCGGCAATTCGGAAATGCCGAGTTTTAAAATTTTCTGCAATCGGCGTTTTTGGCAATCACCAAGTGGTGTATGCCGCCCATGTATATGGTTTTTAGTACAGGCACAAACTACTGCCTACCTAGGGAATATCTTCCACCCGCAATCTAAATTTTTTTTTGAAACGGTAGCTAAGATCATTGGCTAACATAATCTATCTTTCGTTTTGCTGGCGAGTTACACACATCTGCAATTTTTCGTCTGTAAATTTAGTACTATATAAGTTCAAGAGGTAGGCAGGCACGAATGAAATTCAATGATGGCAGACATGAGAAACAGCGTAAGCCATGPBAGTTTTTTGACATTCAGTTGGATTGGACACACTGAAAATTGTGTGCAGTAGTTAAAATTCGAATTCTGTACTTTGTTGGAAGCCTTCATTATTGACAAGCATCTAGAATTTTTTAAAGCTCTAAGACGAGTAGGACTTA")
# print len(seq)
# for i in range(len(seq)):
# 	if seq[i] != "A" and seq[i] != "T" and seq[i] != "G" and seq[i] != "C":
# 		print i
# rb = rest.RestrictionBatch(["EcoRI"])
# ana = rest.Analysis(rb, seq)

# print ana.full()

# SNPset = open("SNPsetfixed.txt","r")
# SNPline2 = SNPset.readline()
# SNPlist2 = SNPline2.split()

# print SNPlist2


# seq = Seq("TAAACCTACACTTTTAATCCCTACTTTTTACAATTCTCCCATCCTCTTCGTTTCCTTCGATTGATAAAGTTTTGCACCGTGTTTTTCACACAGAATCACCTCTTTTATCTGTATCTTATCCGCTCCTTTATTGAATACGAAAAACACACGAAATGAACAGAAAAACGAATAAGAGAAAAACCAGCCTCCTACAGACGCCTGATTGATGTCGTACCGAGATCACGCTTGTTACTTCTATATATCTCTTTCAAAAAAAAAAAGATGATGACGAAAGAAAAGGTGTCACCGTCTGCGTAATCTGACGTTCATTGGATTATAATAATAATCTGATAAAAACACAACTCGAAAGTGTTTATTTTTGATAAAGTTTATCCGGCAATTCGGAAATGCCGAGTTTTAAAATTTTCTGCAATCGGCGTTTTTGGCAATCACCAAGTGGTGTATGCCGCCCATGTATATGGTTTTTAGTACAGGCACAAACTACTGCCTACCTAGGGAATATCTTCCACCCGCAATCTAAATTTTTTTTTGAAACGGTAGCTAAGATCATTGGCTAACATAATCTATCTTTCGTTTTGCTGGCGAGTTACACACATCTGCAATTTTTCGTCTGTAAATTTAGTACTATATAAGTTCAAGAGGTAGGCAGGCACGAATGAAATTCAATGATGGCAGACATGAGAAACAGCGTAAGCCATGAAGTTTTTTGACATTCAGTTGGATTGGACACACTGAAAATTGTGTGCAGTAGTTAAAATTCGAATTCTGTACTTTGTTGGAAGCCTTCATTATTGACAAGCATCTAGAATTTTTTAAAGCTCTAAGACGAGTAGGACTTAATTTTAAAAATATAAAACGAGAATCTTCGTCCCCTGCTGTTCTTTGTTATCTAATTCCTAAATGTTGTGACTTTTTAATAAGATACAATATAACATTGGGTGTCTGCCATTAATGTATCTTTTGAGATAACATGCCATTTGCAGTATATCCAATATCCTTGAGAAAAACGGTGTTTGAACACACTGTTTTTGCAGAGTTATCACAGACTTTGCTTATCACTTAAAACCCCAATAAACACCGTTCTCGATATCCGCTGTGGTACGTCATAACCTAGACAGGAACTGAAGTCTAGAAGATTTGAAATATAAGGTTATTAGATCAAATAGAACTGGAGGATTTCTTATTGCTTTCCAACTGAAAAATTTGAAAGGCTGAATTTTATTGTCAAATTAAAATAAAAGTAATACTGATTATCGACCAAATATGATCTTGTTCTTTGAACTCTAAAAAAAATTAAGGTACAATGCAAATGGCTAAATCAAGTTCTGAAATTGACGGCAATTGGTTGTAAACGTGGAAGTAGAAAATATTTTTTAAATATCTTTCACACTGTGTTTGA")
# seq2 = Seq("TAAACCTACACTTTTAATCCCTACTTTTTACAATTCTCCCATCCTCTTCGTTTCCTTCGATTGATAAAGTTTTGCACCGTGTTTTTCACACAGAATCACCTCTTTTATCTGTATCTTATCCGCTCCTTTATTGAATACGAAAAACACACGAAATGAACAGAAAAACGAATAAGAGAAAAACCAGCCTCCTACAGACGCCTGATTGATGTCGTACCGAGATCACGCTTGTTACTTCTATATATCTCTTTCAAAAAAAAAAAGATGATGACGAAAGAAAAGGTGTCACCGTCTGCGTAATCTGACGTTCATTGGATTATAATAATAATCTGATAAAAACACAACTCGAAAGTGTTTATTTTTGATAAAGTTTATCCGGCAATTCGGAAATGCCGAGTTTTAAAATTTTCTGCAATCGGCGTTTTTGGCAATCACCAAGTGGTGTATGCCGCCCATGTATATGGTTTTTAGTACAGGCACAAACTACTGCCTACCTAGGGAATATCTTCCACCCGCAATCTAAATTTTTTTTTGAAACGGTAGCTAAGATCATTGGCTAACATAATCTATCTTTCGTTTTGCTGGCGAGTTACACACATCTGCAATTTTTCGTCTGTAAATTTAGTACTATATAAGTTCAAGAGGTAGGCAGGCACGAATGAAATTCAATGATGGCAGACATGAGAAACAGCGTAAGCCATGGAGTTTTTTGACATTCAGTTGGATTGGACACACTGAAAATTGTGTGCAGTAGTTAAAATTCGAATTCTGTACTTTGTTGGAAGCCTTCATTATTGACAAGCATCTAGAATTTTTTAAAGCTCTAAGACGAGTAGGACTTAATTTTAAAAATATAAAACGAGAATCTTCGTCCCCTGCTGTTCTTTGTTATCTAATTCCTAAATGTTGTGACTTTTTAATAAGATACAATATAACATTGGGTGTCTGCCATTAATGTATCTTTTGAGATAACATGCCATTTGCAGTATATCCAATATCCTTGAGAAAAACGGTGTTTGAACACACTGTTTTTGCAGAGTTATCACAGACTTTGCTTATCACTTAAAACCCCAATAAACACCGTTCTCGATATCCGCTGTGGTACGTCATAACCTAGACAGGAACTGAAGTCTAGAAGATTTGAAATATAAGGTTATTAGATCAAATAGAACTGGAGGATTTCTTATTGCTTTCCAACTGAAAAATTTGAAAGGCTGAATTTTATTGTCAAATTAAAATAAAAGTAATACTGATTATCGACCAAATATGATCTTGTTCTTTGAACTCTAAAAAAAATTAAGGTACAATGCAAATGGCTAAATCAAGTTCTGAAATTGACGGCAATTGGTTGTAAACGTGGAAGTAGAAAATATTTTTTAAATATCTTTCACACTGTGTTTGA")
# rsite = "CCATGG"
# for i in range(len(seq) - 6):
# 	if seq2[i:i+6] == rsite:
# 		print "match"

# rb = rest.RestrictionBatch(["NcoI"])
# ana = rest.Analysis(rb, seq2)
# print ana.full()

# print len(seq)

# print "Done"

for i in range(0):
	print i
print "done"












