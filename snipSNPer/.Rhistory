2+2
heights = c(5,6,5,4,4,3,3,5,5,6,7,4,5,7)
mean(heights)
median(heights)
plot(heights)
football = read.csv(paste(http://web1.ncaa.org/mfb/2012/Internet/schedule/DIVISIONB.csv))
football = read.csv(paste(web1.ncaa.org/mfb/2012/Internet/schedule/DIVISIONB.csv))
football = read.csv(url(http://web1.ncaa.org/mfb/2012/Internet/schedule/DIVISIONB.csv))
football = read.csv(http://web1.ncaa.org/mfb/2012/Internet/schedule/DIVISIONB.csv)
football = read.csv(http:/web1.ncaa.org/mfb/2012/Internet/schedule/DIVISIONB.csv)
football <- read.csv(http:/web1.ncaa.org/mfb/2012/Internet/schedule/DIVISIONB.csv)
read.csv(http://web1.ncaa.org/mfb/2012/Internet/schedule/DIVISIONB.csv)
read.csv(http://web1.ncaa.org/mfb/2012/Internet/schedule/DIVISIONB.csv)
read.csv((urlhttp://web1.ncaa.org/mfb/2012/Internet/schedule/DIVISIONB.csv))
read.csv(url(http://web1.ncaa.org/mfb/2012/Internet/schedule/DIVISIONB.csv))
football = url(http://web1.ncaa.org/mfb/2012/Internet/schedule/DIVISIONB.csv)
url(http://web1.ncaa.org/mfb/2012/Internet/schedule /DIVISIONB.csv)
url(http://web1.ncaa.org/mfb/2012/Internet/schedule /DIVISIONB.csv)
url(http://web1.ncaa.org/mfb/2012/Internet/schedule /DIVISIONB.csv)
scores
getwd()
scores=read.csv(DIVISIONB.csv, header=TRUE)
scores=read.csv(DIVISIONB.csv,header=TRUE)
setwd("/Users/tylershimko/Downloads")
scores = read.csv(DIVISIONB.csv, header = TRUE)
scores = read.csv("DIVISIONB.csv", header = TRUE)
View(scores)
names(scores)
Score.For[Institution=="UNLV"]
names(rent) = c("insID", "ins", "date", "oppID", "opp", "ptsFor", "ptsAgs", "locat")
names(scores) = c("insID", "ins", "date", "oppID", "opp", "ptsFor", "ptsAgs", "locat")
locat = scores(,8)
locat = scores[,8]
insID = scores [,1]
ins = scores[,2]
date = scores[,3]
oppID = scores[,4]
opp = scores[,5]
ptsFor = scores[,6]
ptsAgs = scores[,7]
locat = scores[,8]
ptsFor[ins=="UNLV"]
plot(ptsFor[ins=="UNLV"], ptsAgs[ins=="UNLV"])
install.packages("UsingR")
library("UsingR", lib.loc="/Users/tylershimko/Library/R/2.15/library")
getSolution(chapter = 1, problem = 12)
getAnswer(chapter = 1, problem = 12)
getAnswer(chapter = 1, problem = 13)
getAnswer(chapter = 1, problem = 14)
getAnswer(chapter = 1, problem = 18)
getAnswer(chapter = 1, problem = 11)
getAnswer(chapter = 1, problem = 11)
getAnswer(chapter = 1, problem = 1)
?getAnswer
paste(1:5, 4:1)
seq(1:5)
?rev
c(1:5, 4:1)
source('~/Downloads/Lab3.R')
source('~/Downloads/Lab3.R')
source('~/Downloads/Lab3.R')
funct = function(x){
sqrt((13.23sin(x/57.2957795))^2+(4.82895cos(x/57.2957795))^2)
}
funct = function(x){
sqrt((13.23*sin(x/57.2957795))^2+(4.82895*cos(x/57.2957795))^2)
}
se = seq(0,90,.001)
se = seq(0,90,.001)
vec = c()
for(i in 0:length(se)){
vec[i] = funct(se[i])
}
min(vec)
which(min(vec))
head(vec)
vec[1000]
funct = function(x){
sqrt((13.23*sin(x/57.2957795))^2+(1.35*9.8*sin(x/57.2957795)*.365*cos(x/57.2957795))^2)
}
se = seq(0,90,.001)
vec = c()
for(i in 0:length(se)){
vec[i] = funct(se[i])
}
plot(se, vec)
require(ggplot2)
setwd(cwd)
cutsites = read.csv("cutsiteslist.csv")
setwd("~/Andersen-Lab-Code/snipSNPer")
cutsites = read.csv("cutsiteslist.csv")
positions = read.csv("positionlist.csv")
cutsites = read.csv("cutsiteslist.csv")
rstudio::viewData(cutsites)
require(ggplot2)
setwd(cwd)
cutsites = read.csv("cutsiteslist.csv")
positions = read.csv("positionlist.csv")
start = min(positions[,1])
sto = max(positions[,1])
source('~/Downloads/Lab11.R')
